#include<iostream>

using namespace std;

#define MAX 1000

int select[MAX];
int num = 0;

void DFS( int m, int n, int init);
void print_arr(int n);
int judge(int n);

int main()
{
	int n,m;
	cin >> n >> m;
	if (n >= 1 && n <= 1000)
	{
		if (m >= 1 && m <= 100) {
			DFS(m, n, 0);
			cout << num % 998244353 << endl;
		}
	}

	return 0;
}

void DFS(int m, int n, int init)
{
	if (n == init)
	{
		num += judge(n);
		return;
	}
	for (int i = 1; i <= m; i++)
	{
		select[init] = i;
		DFS(m, n, init + 1);
	}
}

void print_arr(int n)
{
	for (int i = 0; i < n; i++)
		cout << select[i] << " ";
	cout << endl;
}
int judge(int n)
{
	if (n < 3)
	{
			return 1;
	}
	else
	{
		int p = 0;
		int left,middle,right;
		for (int i = 0; i <= n-3; i++)
		{
			left = select[i];
			middle = select[i+1];
			right = select[i+2];
			if (!(left < middle && middle > right))
			{
				//cout << left << " " << middle << " " << right << endl;
				p++;
			}
		}
		return p;
	}
}
